// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eSalon.Services.Database;

#nullable disable

namespace eSalon.Services.Migrations
{
    [DbContext(typeof(ESalonContext))]
    [Migration("20250517121306_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eSalon.Services.Database.AktiviranaPromocija", b =>
                {
                    b.Property<int>("AktiviranaPromocijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AktiviranaPromocijaId"));

                    b.Property<bool>("Aktivirana")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DatumAktiviranja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Iskoristena")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("PromocijaId")
                        .HasColumnType("int")
                        .HasColumnName("PromocijaID");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("AktiviranaPromocijaId")
                        .HasName("PK__Aktivira__E44F1952AE21862C");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PromocijaId");

                    b.ToTable("AktiviranaPromocija", (string)null);
                });

            modelBuilder.Entity("eSalon.Services.Database.Arhiva", b =>
                {
                    b.Property<int>("ArhivaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArhivaId"));

                    b.Property<DateTime>("DatumDodavanja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("UslugaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("ArhivaId")
                        .HasName("PK__Arhiva__A791E50C258529DA");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UslugaId");

                    b.ToTable("Arhiva", (string)null);
                });

            modelBuilder.Entity("eSalon.Services.Database.Favorit", b =>
                {
                    b.Property<int>("FavoritId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavoritId"));

                    b.Property<DateTime>("DatumDodavanja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("UslugaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("FavoritId")
                        .HasName("PK__Favorit__C32DB3CCB7D5AA77");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UslugaId");

                    b.ToTable("Favorit", (string)null);
                });

            modelBuilder.Entity("eSalon.Services.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikUlogaId"));

                    b.Property<DateTime>("DatumDodavanja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("KorisnikUlogaId")
                        .HasName("PK__Korisnic__1608726E9F3DF1AD");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge", (string)null);
                });

            modelBuilder.Entity("eSalon.Services.Database.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikId"));

                    b.Property<DateTime>("DatumRegistracije")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("JeAktivan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("KorisnikId")
                        .HasName("PK__Korisnik__80B06D41D5A05C3E");

                    b.HasIndex(new[] { "KorisnickoIme" }, "UQ__Korisnik__992E6F92066ADDE1")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Korisnik__A9D105345A0525D1")
                        .IsUnique();

                    b.ToTable("Korisnik", (string)null);
                });

            modelBuilder.Entity("eSalon.Services.Database.NacinPlacanja", b =>
                {
                    b.Property<int>("NacinPlacanjaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NacinPlacanjaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("NacinPlacanjaId")
                        .HasName("PK__NacinPla__AD0C4729CEFE554B");

                    b.ToTable("NacinPlacanja", (string)null);
                });

            modelBuilder.Entity("eSalon.Services.Database.Obavijest", b =>
                {
                    b.Property<int>("ObavijestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObavijestId"));

                    b.Property<DateTime>("DatumObavijesti")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("JePogledana")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("ObavijestId")
                        .HasName("PK__Obavijes__99D330E0E1DFA3E0");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Obavijest", (string)null);
                });

            modelBuilder.Entity("eSalon.Services.Database.Ocjena", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OcjenaId"));

                    b.Property<DateTime>("DatumOcjenjivanja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("UslugaId")
                        .HasColumnType("int");

                    b.Property<int>("Vrijednost")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("OcjenaId")
                        .HasName("PK__Ocjena__E6FC7AA94668F7DF");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UslugaId");

                    b.ToTable("Ocjena", (string)null);
                });

            modelBuilder.Entity("eSalon.Services.Database.Promocija", b =>
                {
                    b.Property<int>("PromocijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PromocijaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromocijaId"));

                    b.Property<DateTime>("DatumKraja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("DatumPocetka")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Opis")
                        .HasColumnType("text");

                    b.Property<decimal>("Popust")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("UslugaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("PromocijaId")
                        .HasName("PK__Promocij__2C5ACD714D0FD88B");

                    b.HasIndex("UslugaId");

                    b.ToTable("Promocija", (string)null);
                });

            modelBuilder.Entity("eSalon.Services.Database.Recenzija", b =>
                {
                    b.Property<int>("RecenzijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecenzijaId"));

                    b.Property<int?>("BrojDislajkova")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("BrojLajkova")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("DatumDodavanja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Komentar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("UslugaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("RecenzijaId")
                        .HasName("PK__Recenzij__D36C60705E30AA70");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UslugaId");

                    b.ToTable("Recenzija", (string)null);
                });

            modelBuilder.Entity("eSalon.Services.Database.RecenzijaOdgovor", b =>
                {
                    b.Property<int>("RecenzijaOdgovorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecenzijaOdgovorId"));

                    b.Property<int?>("BrojDislajkova")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("BrojLajkova")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("DatumDodavanja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Komentar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("RecenzijaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("RecenzijaOdgovorId")
                        .HasName("PK__Recenzij__23922A44E1A14A69");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("RecenzijaId");

                    b.ToTable("RecenzijaOdgovor", (string)null);
                });

            modelBuilder.Entity("eSalon.Services.Database.RecenzijaOdgovorReakcija", b =>
                {
                    b.Property<int>("RecenzijaOdgovorReakcijaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumReakcije")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("JeLajk")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("RecenzijaOdgovorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("RecenzijaOdgovorReakcijaId")
                        .HasName("PK__Recenzij__BA973BC7765F9E67");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("RecenzijaOdgovorId");

                    b.ToTable("RecenzijaOdgovorReakcija", (string)null);
                });

            modelBuilder.Entity("eSalon.Services.Database.RecenzijaReakcija", b =>
                {
                    b.Property<int>("RecenzijaReakcijaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumReakcije")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("JeLajk")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("RecenzijaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("RecenzijaReakcijaId")
                        .HasName("PK__Recenzij__7B1C616C559DBD16");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("RecenzijaId");

                    b.ToTable("RecenzijaReakcija", (string)null);
                });

            modelBuilder.Entity("eSalon.Services.Database.Rezervacija", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervacijaId"));

                    b.Property<int?>("AktiviranaPromocijaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumRezervacije")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("FrizerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("NacinPlacanjaId")
                        .HasColumnType("int");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("StateMachine")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UkupanBrojUsluga")
                        .HasColumnType("int");

                    b.Property<decimal>("UkupnaCijena")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("UkupnoTrajanje")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("VrijemeKraja")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("VrijemePocetka")
                        .HasColumnType("time");

                    b.HasKey("RezervacijaId")
                        .HasName("PK__Rezervac__CABA44DD5D0F9C23");

                    b.HasIndex("AktiviranaPromocijaId");

                    b.HasIndex("FrizerId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("NacinPlacanjaId");

                    b.ToTable("Rezervacija", (string)null);
                });

            modelBuilder.Entity("eSalon.Services.Database.StavkeRezervacije", b =>
                {
                    b.Property<int>("StavkeRezervacijeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StavkeRezervacijeId"));

                    b.Property<decimal?>("Cijena")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RezervacijaId")
                        .HasColumnType("int");

                    b.Property<int>("UslugaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("StavkeRezervacijeId")
                        .HasName("PK__StavkeRe__17239E701F07736A");

                    b.HasIndex("RezervacijaId");

                    b.HasIndex("UslugaId");

                    b.ToTable("StavkeRezervacije", (string)null);
                });

            modelBuilder.Entity("eSalon.Services.Database.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UlogaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opis")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("UlogaId")
                        .HasName("PK__Uloga__DCAB23CB8D8DBCEC");

                    b.ToTable("Uloga", (string)null);
                });

            modelBuilder.Entity("eSalon.Services.Database.Usluga", b =>
                {
                    b.Property<int>("UslugaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UslugaId"));

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime>("DatumObjavljivanja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Opis")
                        .HasColumnType("text");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Trajanje")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.Property<int>("VrstaId")
                        .HasColumnType("int");

                    b.HasKey("UslugaId")
                        .HasName("PK__Usluga__0BE5E72F255F7E85");

                    b.HasIndex("VrstaId");

                    b.ToTable("Usluga", (string)null);
                });

            modelBuilder.Entity("eSalon.Services.Database.VrstaUsluge", b =>
                {
                    b.Property<int>("VrstaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VrstaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("VrstaId")
                        .HasName("PK__VrstaUsl__42CB8F2F695BF2C1");

                    b.ToTable("VrstaUsluge", (string)null);
                });

            modelBuilder.Entity("eSalon.Services.Database.AktiviranaPromocija", b =>
                {
                    b.HasOne("eSalon.Services.Database.Korisnik", "Korisnik")
                        .WithMany("AktiviranaPromocijas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Aktiviran__Koris__6C190EBB");

                    b.HasOne("eSalon.Services.Database.Promocija", "Promocija")
                        .WithMany("AktiviranaPromocijas")
                        .HasForeignKey("PromocijaId")
                        .IsRequired()
                        .HasConstraintName("FK__Aktiviran__Promo__6B24EA82");

                    b.Navigation("Korisnik");

                    b.Navigation("Promocija");
                });

            modelBuilder.Entity("eSalon.Services.Database.Arhiva", b =>
                {
                    b.HasOne("eSalon.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Arhivas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Arhiva__Korisnik__5AEE82B9");

                    b.HasOne("eSalon.Services.Database.Usluga", "Usluga")
                        .WithMany("Arhivas")
                        .HasForeignKey("UslugaId")
                        .IsRequired()
                        .HasConstraintName("FK__Arhiva__UslugaId__5BE2A6F2");

                    b.Navigation("Korisnik");

                    b.Navigation("Usluga");
                });

            modelBuilder.Entity("eSalon.Services.Database.Favorit", b =>
                {
                    b.HasOne("eSalon.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Favorits")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Favorit__Korisni__5535A963");

                    b.HasOne("eSalon.Services.Database.Usluga", "Usluga")
                        .WithMany("Favorits")
                        .HasForeignKey("UslugaId")
                        .IsRequired()
                        .HasConstraintName("FK__Favorit__UslugaI__5629CD9C");

                    b.Navigation("Korisnik");

                    b.Navigation("Usluga");
                });

            modelBuilder.Entity("eSalon.Services.Database.KorisniciUloge", b =>
                {
                    b.HasOne("eSalon.Services.Database.Korisnik", "Korisnik")
                        .WithMany("KorisniciUloges")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Korisnici__Koris__412EB0B6");

                    b.HasOne("eSalon.Services.Database.Uloga", "Uloga")
                        .WithMany("KorisniciUloges")
                        .HasForeignKey("UlogaId")
                        .IsRequired()
                        .HasConstraintName("FK__Korisnici__Uloga__4222D4EF");

                    b.Navigation("Korisnik");

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("eSalon.Services.Database.Obavijest", b =>
                {
                    b.HasOne("eSalon.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Obavijests")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Obavijest__Koris__4F7CD00D");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eSalon.Services.Database.Ocjena", b =>
                {
                    b.HasOne("eSalon.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Ocjenas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Ocjena__Korisnik__02084FDA");

                    b.HasOne("eSalon.Services.Database.Usluga", "Usluga")
                        .WithMany("Ocjenas")
                        .HasForeignKey("UslugaId")
                        .IsRequired()
                        .HasConstraintName("FK__Ocjena__UslugaId__01142BA1");

                    b.Navigation("Korisnik");

                    b.Navigation("Usluga");
                });

            modelBuilder.Entity("eSalon.Services.Database.Promocija", b =>
                {
                    b.HasOne("eSalon.Services.Database.Usluga", "Usluga")
                        .WithMany("Promocijas")
                        .HasForeignKey("UslugaId")
                        .IsRequired()
                        .HasConstraintName("FK__Promocija__Uslug__66603565");

                    b.Navigation("Usluga");
                });

            modelBuilder.Entity("eSalon.Services.Database.Recenzija", b =>
                {
                    b.HasOne("eSalon.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Recenzijas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Recenzija__Koris__07C12930");

                    b.HasOne("eSalon.Services.Database.Usluga", "Usluga")
                        .WithMany("Recenzijas")
                        .HasForeignKey("UslugaId")
                        .IsRequired()
                        .HasConstraintName("FK__Recenzija__Uslug__08B54D69");

                    b.Navigation("Korisnik");

                    b.Navigation("Usluga");
                });

            modelBuilder.Entity("eSalon.Services.Database.RecenzijaOdgovor", b =>
                {
                    b.HasOne("eSalon.Services.Database.Korisnik", "Korisnik")
                        .WithMany("RecenzijaOdgovors")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Recenzija__Koris__10566F31");

                    b.HasOne("eSalon.Services.Database.Recenzija", "Recenzija")
                        .WithMany("RecenzijaOdgovors")
                        .HasForeignKey("RecenzijaId")
                        .IsRequired()
                        .HasConstraintName("FK__Recenzija__Recen__0F624AF8");

                    b.Navigation("Korisnik");

                    b.Navigation("Recenzija");
                });

            modelBuilder.Entity("eSalon.Services.Database.RecenzijaOdgovorReakcija", b =>
                {
                    b.HasOne("eSalon.Services.Database.Korisnik", "Korisnik")
                        .WithMany("RecenzijaOdgovorReakcijas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Recenzija__Koris__1CBC4616");

                    b.HasOne("eSalon.Services.Database.RecenzijaOdgovor", "RecenzijaOdgovor")
                        .WithMany("RecenzijaOdgovorReakcijas")
                        .HasForeignKey("RecenzijaOdgovorId")
                        .IsRequired()
                        .HasConstraintName("FK__Recenzija__Recen__1BC821DD");

                    b.Navigation("Korisnik");

                    b.Navigation("RecenzijaOdgovor");
                });

            modelBuilder.Entity("eSalon.Services.Database.RecenzijaReakcija", b =>
                {
                    b.HasOne("eSalon.Services.Database.Korisnik", "Korisnik")
                        .WithMany("RecenzijaReakcijas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Recenzija__Koris__17F790F9");

                    b.HasOne("eSalon.Services.Database.Recenzija", "Recenzija")
                        .WithMany("RecenzijaReakcijas")
                        .HasForeignKey("RecenzijaId")
                        .IsRequired()
                        .HasConstraintName("FK__Recenzija__Recen__17036CC0");

                    b.Navigation("Korisnik");

                    b.Navigation("Recenzija");
                });

            modelBuilder.Entity("eSalon.Services.Database.Rezervacija", b =>
                {
                    b.HasOne("eSalon.Services.Database.AktiviranaPromocija", "AktiviranaPromocija")
                        .WithMany("Rezervacijas")
                        .HasForeignKey("AktiviranaPromocijaId")
                        .HasConstraintName("FK__Rezervaci__Aktiv__787EE5A0");

                    b.HasOne("eSalon.Services.Database.Korisnik", "Frizer")
                        .WithMany("RezervacijaFrizers")
                        .HasForeignKey("FrizerId")
                        .IsRequired()
                        .HasConstraintName("FK__Rezervaci__Frize__73BA3083");

                    b.HasOne("eSalon.Services.Database.Korisnik", "Korisnik")
                        .WithMany("RezervacijaKorisniks")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK__Rezervaci__Koris__72C60C4A");

                    b.HasOne("eSalon.Services.Database.NacinPlacanja", "NacinPlacanja")
                        .WithMany("Rezervacijas")
                        .HasForeignKey("NacinPlacanjaId")
                        .IsRequired()
                        .HasConstraintName("FK__Rezervaci__Nacin__778AC167");

                    b.Navigation("AktiviranaPromocija");

                    b.Navigation("Frizer");

                    b.Navigation("Korisnik");

                    b.Navigation("NacinPlacanja");
                });

            modelBuilder.Entity("eSalon.Services.Database.StavkeRezervacije", b =>
                {
                    b.HasOne("eSalon.Services.Database.Rezervacija", "Rezervacija")
                        .WithMany("StavkeRezervacijes")
                        .HasForeignKey("RezervacijaId")
                        .IsRequired()
                        .HasConstraintName("FK__StavkeRez__Rezer__7D439ABD");

                    b.HasOne("eSalon.Services.Database.Usluga", "Usluga")
                        .WithMany("StavkeRezervacijes")
                        .HasForeignKey("UslugaId")
                        .IsRequired()
                        .HasConstraintName("FK__StavkeRez__Uslug__7C4F7684");

                    b.Navigation("Rezervacija");

                    b.Navigation("Usluga");
                });

            modelBuilder.Entity("eSalon.Services.Database.Usluga", b =>
                {
                    b.HasOne("eSalon.Services.Database.VrstaUsluge", "Vrsta")
                        .WithMany("Uslugas")
                        .HasForeignKey("VrstaId")
                        .IsRequired()
                        .HasConstraintName("FK__Usluga__VrstaId__4BAC3F29");

                    b.Navigation("Vrsta");
                });

            modelBuilder.Entity("eSalon.Services.Database.AktiviranaPromocija", b =>
                {
                    b.Navigation("Rezervacijas");
                });

            modelBuilder.Entity("eSalon.Services.Database.Korisnik", b =>
                {
                    b.Navigation("AktiviranaPromocijas");

                    b.Navigation("Arhivas");

                    b.Navigation("Favorits");

                    b.Navigation("KorisniciUloges");

                    b.Navigation("Obavijests");

                    b.Navigation("Ocjenas");

                    b.Navigation("RecenzijaOdgovorReakcijas");

                    b.Navigation("RecenzijaOdgovors");

                    b.Navigation("RecenzijaReakcijas");

                    b.Navigation("Recenzijas");

                    b.Navigation("RezervacijaFrizers");

                    b.Navigation("RezervacijaKorisniks");
                });

            modelBuilder.Entity("eSalon.Services.Database.NacinPlacanja", b =>
                {
                    b.Navigation("Rezervacijas");
                });

            modelBuilder.Entity("eSalon.Services.Database.Promocija", b =>
                {
                    b.Navigation("AktiviranaPromocijas");
                });

            modelBuilder.Entity("eSalon.Services.Database.Recenzija", b =>
                {
                    b.Navigation("RecenzijaOdgovors");

                    b.Navigation("RecenzijaReakcijas");
                });

            modelBuilder.Entity("eSalon.Services.Database.RecenzijaOdgovor", b =>
                {
                    b.Navigation("RecenzijaOdgovorReakcijas");
                });

            modelBuilder.Entity("eSalon.Services.Database.Rezervacija", b =>
                {
                    b.Navigation("StavkeRezervacijes");
                });

            modelBuilder.Entity("eSalon.Services.Database.Uloga", b =>
                {
                    b.Navigation("KorisniciUloges");
                });

            modelBuilder.Entity("eSalon.Services.Database.Usluga", b =>
                {
                    b.Navigation("Arhivas");

                    b.Navigation("Favorits");

                    b.Navigation("Ocjenas");

                    b.Navigation("Promocijas");

                    b.Navigation("Recenzijas");

                    b.Navigation("StavkeRezervacijes");
                });

            modelBuilder.Entity("eSalon.Services.Database.VrstaUsluge", b =>
                {
                    b.Navigation("Uslugas");
                });
#pragma warning restore 612, 618
        }
    }
}
